# Node.js with Vue
# Build a Node.js project that uses Vue.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  - main

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: env
    jobs:
      - job: env_nodes
        steps:
          - checkout: none
          - task: NodeTool@0
            inputs:
              versionSpec: '14.x'
            displayName: 'Install Node.js'

  - stage: lint
    jobs:
      - job: lint_packages
        steps:
          - task: Npm@1
            inputs:
              command: 'install'

          - script: npm run lint
            displayName: 'Run lint'
    dependsOn: env

  - stage: test
    jobs:
      - job: test_packages
        steps:
          - task: Npm@1
            inputs:
              command: 'install'
          - script: npm run test
            displayName: 'Run test'

          - script: ./node_modules/.bin/codecov -t $(CODECOV_TOKEN)
            displayName: 'Create codecov results'

          - task: PublishCodeCoverageResults@1
            displayName: 'Publish code coverage results'
            condition: succeededOrFailed()
            inputs:
              codeCoverageTool: Cobertura
              summaryFileLocation: $(System.DefaultWorkingDirectory)/coverage/cobertura-coverage.xml
              reportDirectory: '$(System.DefaultWorkingDirectory)/coverage'
              failIfCoverageEmpty: true

          - task: PublishTestResults@2
            displayName: 'Publish test results'
            condition: succeededOrFailed()
            inputs:
              testResultsFiles: junit.xml
              mergeTestResults: true
              testRunTitle: 'Jest Unit Tests'
              failTaskOnFailedTests: true
    dependsOn: env

  - stage: build
    jobs:
      - job: build_packages
        steps:
          - task: Npm@1
            inputs:
              command: 'install'

          - script: npm run build
            displayName: 'Run build'

          - script: |
              export DEPLOY_DOMAIN=https://preview-${SYSTEM_PULLREQUEST_PULLREQUESTNUMBER}-idux.surge.sh
              npx surge --project ./dist/site --domain $DEPLOY_DOMAIN
              tar czvf build.tgz ./dist/site
            env:
              SURGE_LOGIN: $(SURGE_LOGIN)
              SURGE_TOKEN: $(SURGE_TOKEN)
            displayName: 'Deploy build result'

          - task: CopyFiles@2
            inputs:
              contents: build.tgz
              targetFolder: $(Build.ArtifactStagingDirectory)
            displayName: 'Copy archives to artifacts staging directory'

          - task: PublishBuildArtifacts@1
            inputs:
              path: $(Build.ArtifactStagingDirectory)
            displayName: 'Upload artifacts'
    dependsOn: env
