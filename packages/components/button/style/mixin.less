@button-primary-border: color(~`colorPalette('@{button-primary-bg}', 10) `);
@button-danger-border: color(~`colorPalette('@{button-danger-bg}', 10) `);

.button-size(@height; @font-size; @padding-horizontal; @border-radius) {
  @padding-vertical: max(
    (round(((@height - @font-size * @button-line-height) / 2) * 10) / 10) - @button-border-size,
    0
  );

  height: @height;
  padding: @padding-vertical @padding-horizontal;
  font-size: @font-size;
  border-radius: @border-radius;
}

.button-disabled(@color: @button-disable-color; @background: @button-disable-bg-color; @border: @button-disable-border) {
  &.@{button-prefix}-disabled {
    &,
    &:hover,
    &:focus,
    &:active {
      .button-color(@color; @background; @border);
      text-shadow: none;
      box-shadow: none;
    }
  }
}

.button-variant-primary(@color; @background; @border) {
  .button-color(@color; @background; @border);
  text-shadow: @button-primary-text-shadow;
  box-shadow: @button-primary-box-shadow;

  &:hover {
    & when (@theme = default) {
      .button-color(@color; ~`colorPalette('@{background}', -10) `; @background);
    }
  }
  &:focus,
  &:active {
    & when (@theme = default) {
      .button-color(@color; ~`colorPalette('@{background}', 10) `; ~`colorPalette('@{background}', 20) `);
    }
  }

  .button-disabled();
}

.button-variant-other(@color; @background; @border) {
  .button-color(@color; @background; @border);

  &:hover {
    & when (@theme = default) {
      .button-color(~`colorPalette('@{button-primary-bg}', -10) `; @background; @button-primary-bg);
    }
  }
  &:focus,
  &:active {
    & when (@theme = default) {
      .button-color(~`colorPalette('@{button-primary-bg}', 10) `; @background; ~`colorPalette('@{button-primary-bg}', 20) `);
    }
  }
  .button-disabled();
}

.button-variant-ghost(@color; @border: @color) {
  text-shadow: none;
  &:hover {
    & when (@border = transparent) {
      & when (@theme = default) {
        .button-color(~`colorPalette('@{color}', -10) `; transparent; transparent);
      }
    }
    & when not (@border = transparent) {
      & when (@theme = default) {
        .button-color(~`colorPalette('@{color}', -10) `; transparent; ~`colorPalette('@{border}', -10) `);
      }
    }
  }
  &:focus,
  &:active {
    & when (@border = transparent) {
      & when (@theme = default) {
        .button-color(~`colorPalette('@{color}', 10) `; transparent; transparent);
      }
    }
    & when not(@border = transparent) {
      & when (@theme = default) {
        .button-color(~`colorPalette('@{color}', 10) `; transparent; ~`colorPalette('@{border}', 10) `);
      }
    }
  }
}

.button-color(@color; @background; @border) {
  color: @color;
  background: @background;
  border-color: @border;
  > a:only-child {
    color: currentColor;
    &::after {
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      background: transparent;
      content: '';
    }
  }
}

.button() {
  position: relative;
  display: inline-block;
  font-weight: @button-font-weight;
  white-space: nowrap;
  text-align: center;
  background-image: none;
  border: @button-border-size @button-border-style transparent;
  box-shadow: @button-shadow;
  cursor: pointer;
  transition: all 0.3s @ease-in-out;
  user-select: none;
  touch-action: manipulation;
  .button-size(@button-height-md; @button-font-size-md; @button-padding-md; @button-border-radius);
  &,
  &:active,
  &:focus {
    outline: 0;
  }
  &:hover {
    text-decoration: none;
  }
  &:active {
    outline: 0;
    box-shadow: none;
  }

  &-small {
    .button-size(@button-height-sm; @button-font-size-sm;  @button-padding-sm;@button-border-radius);
  }
  &-large {
    .button-size(@button-height-lg; @button-font-size-lg; @button-padding-lg; @button-border-radius);
  }
}

.button-default() {
  .button-variant-other(@button-default-color; @button-default-bg; @button-default-border);
  &:hover,
  &:focus,
  &:active {
    text-decoration: none;
    background: @button-default-bg;
  }
}

.button-primary() {
  .button-variant-primary(@button-primary; @button-primary-bg; @button-primary-border);
}

.button-dashed() {
  .button-variant-other(@button-default-color, @button-default-bg, @button-default-border);
  border-style: dashed;
}

.button-text() {
  .button-variant-other(@button-text-color, transparent, transparent);
  box-shadow: none;
  &:hover,
  &:focus {
    color: @button-text-color;
    background: @button-text-hover-bg;
    border-color: transparent;
  }
  &:active {
    color: @button-text-color;
    background: fadein(@button-text-hover-bg, 1%);
    border-color: transparent;
  }
  .button-disabled(@button-disable-color; transparent; transparent);
}

.button-link() {
  .button-variant-other(@button-link-color, transparent, transparent);
  box-shadow: none;
  &:hover {
    background: @button-link-hover-bg;
  }
  &:hover,
  &:focus,
  &:active {
    border-color: transparent;
  }
  .button-disabled(@button-disable-color; transparent; transparent);
}

.button-danger() {
  .button-color(@button-danger-color, @button-default-bg, @button-danger-border);
  &:hover {
    & when (@theme = default) {
      .button-color(~`colorPalette('@{button-danger-color}', -10) `; @button-default-bg; @button-danger-color);
    }
  }
  &:focus,
  &:active {
    & when (@theme = default) {
      .button-color( ~`colorPalette('@{button-danger-color}', 10) `; @button-default-bg; ~`colorPalette('@{button-danger-color}', 20) `);
    }
  }
  .button-disabled();
}

.button-danger-primary() {
  .button-variant-primary(@button-primary, @button-danger-bg, @button-danger-border);
}

.button-danger-text() {
  .button-variant-other(@button-danger-color, transparent, transparent);
  box-shadow: none;
  &:hover {
    & when (@theme = default) {
      .button-color(~`colorPalette('@{button-danger-color}', -10) `; @button-text-hover-bg; transparent);
    }
  }
  &:focus,
  &:active {
    & when (@theme = default) {
      .button-color(~`colorPalette('@{button-danger-color}', 10) `; fadein(@button-text-hover-bg, 1%); transparent);
    }
  }
  .button-disabled(@button-disable-color; transparent; transparent);
}

.button-danger-link() {
  .button-variant-other(@button-danger-color, transparent, transparent);
  box-shadow: none;
  &:hover {
    & when (@theme = default) {
      .button-color(~`colorPalette('@{button-danger-color}', -10) `; transparent; transparent);
    }
  }
  &:focus,
  &:active {
    & when (@theme = dark) {
      .button-color(~`colorPalette('@{button-danger-color}', 10) `; transparent; transparent);
    }
  }
  .button-disabled(@button-disable-color; transparent; transparent);
}

.button-ghost() {
  .button-color(@button-ghost-color; @button-ghost-bg; @button-ghost-border);
  .button-variant-ghost(@button-primary-border);
  .button-disabled();
}

.button-ghost-primary() {
  .button-color(@button-primary-border; @button-ghost-bg; @button-primary-border);
  .button-variant-ghost(@button-primary-border);
  .button-disabled();
}

.button-ghost-danger() {
  .button-color(@button-danger-color; @button-ghost-bg; @button-danger-color);
  .button-variant-ghost(@button-danger-border);
  .button-disabled();
}

.button-round(@buttonPrefix) {
  .button-size(@button-height-md; @button-font-size-md; @button-height-md / 2; @button-height-md);
  &.@{buttonPrefix}-small {
    .button-size(@button-height-sm; @button-font-size-sm; @button-height-sm / 2; @button-height-sm);
  }
  &.@{buttonPrefix}-large {
    .button-size(@button-height-lg; @button-font-size-lg; @button-height-lg / 2; @button-height-lg);
  }
}

.button-circle(@buttonPrefix) {
  min-width: @button-height-md;
  padding-right: 0;
  padding-left: 0;
  text-align: center;
  border-radius: 50%;
  &.@{buttonPrefix}-small {
    min-width: @button-height-sm;
    border-radius: 50%;
  }
  &.@{buttonPrefix}-large {
    min-width: @button-height-lg;
    border-radius: 50%;
  }
}

.button-icon-only(@buttonPrefix; @icon-prefix) {
  line-height: 1;
  font-size: @button-font-size-md + 2;
  &.@{buttonPrefix}-small {
    font-size: @button-font-size-sm + 2;
  }
  &.@{buttonPrefix}-large {
    font-size: @button-font-size-lg + 2;
  }
}
