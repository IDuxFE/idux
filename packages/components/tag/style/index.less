@import '../../style/themes/default.less';

@tag-prefix: ~'@{idux-prefix}-tag';

.@{tag-prefix} {
  color: @tag-default-color;
  display: inline-block;
  padding: @tag-default-padding;
  border: 1px solid @tag-default-border-color;
  border-radius: @tag-border-radius;
  background: @tag-default-background-color;
  font-size: @tag-font-size;

  & + .@{tag-prefix} {
    margin-left: @tag-margin;
  }

  &-icon {
    padding-right: @tag-padding;
  }

  &-close-icon {
    color: fade(@tag-default-color, 60%);
    padding-left: @tag-padding;

    &:hover {
      color: @tag-default-color;
    }
  }

  &-round {
    border-radius: @tag-round-border-radius;
  }

  // mixin to iterate over colors and create CSS class for each one
  .make-color-classes(@colors, @i: length(@colors)) when (@i > 0) {
    .make-color-classes(@colors, @i - 1);

    // list-用逗号或空格分隔的值列表。 index-一个整数，指定要返回的列表元素的位置。返回：列表中指定位置的值。
    // 返回列表中指定位置的值。
    @color: extract(@colors, @i);
    @lightColor: 'color-@{color}-l50';
    @lightBorderColor: 'color-@{color}-l30';
    @darkColor: 'color-@{color}';
    &-@{color} {
      color: @@darkColor;
      background: @@lightColor;
      border-color: @@lightBorderColor;

      .@{tag-prefix}-close-icon {
        color: fade(@@darkColor, 60%);

        &:hover {
          color: @@darkColor;
        }
      }
    }
  }

  .make-color-classes(@preset-colors);
  .make-color-classes(@status-colors);

  &-has-color {
    color: @color-white;
    border-color: transparent;
  }

  &-checkable {
    color: @tag-default-color;
    background-color: transparent;
    border-color: transparent;
    cursor: pointer;

    .@{tag-prefix}-close-icon {
      color: fade(@tag-default-color, 60%);
    }

    &:not(&-checked):hover {
      color: @color-primary;

      .@{tag-prefix}-close-icon {
        color: fade(@color-primary, 60%);

        &:hover {
          color: @color-primary;
        }
      }
    }

    &:active,
    &-checked {
      color: @text-color-inverse;

      .@{tag-prefix}-close-icon {
        color: fade(@text-color-inverse, 60%);

        &:hover {
          color: @text-color-inverse;
        }
      }
    }
    &-checked {
      background-color: @color-primary;
    }
    &:active {
      background-color: @color-blue-d10;
    }
  }
}
