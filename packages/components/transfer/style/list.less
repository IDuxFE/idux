@import '../../style/mixins/reset.less';

.@{transfer-list-prefix} {
  width: 100%;
  height: 100%;
  overflow: auto;
  background-color: var(--ix-color-container-bg);

  &.@{transfer-list-prefix}-virtual {
    height: auto;
  }

  &-inner {
    display: flex;
    flex-flow: column wrap;
    flex-shrink: 0;
  }

  &-item {
    display: flex;
    align-items: center;
    justify-content: flex-start;
    min-height: var(--ix-transfer-list-item-min-height);
    padding: var(--ix-transfer-content-padding);
    line-height: 1;
    font-size: var(--ix-font-size-sm);
    flex-shrink: 0;
    white-space: nowrap;

    &-disabled {
      color: var(--ix-color-text-disabled);
      cursor: not-allowed;
    }
    &-disabled &-label {
      cursor: not-allowed;
    }
    &&-disabled &-close-icon {
      color: var(--ix-color-icon-disabled);
    }

    &-checkbox {
      flex: auto;
    }

    & &-close-icon {
      position: sticky;
      right: 0;
      display: flex;
      align-items: center;
      align-self: stretch;
      margin-left: auto;
      padding: var(--ix-transfer-close-icon-padding);
      background: linear-gradient(to right, transparent, var(--ix-color-container-bg) 30%);
      font-size: var(--ix-font-size-icon);
      color: var(--ix-color-icon);
      
      &:hover {
        color: var(--ix-color-icon-hover);
      }
      &:focus,
      &:active {
        color: var(--ix-color-icon-active);
      }

      cursor: pointer;
    }

    &:not(&-disabled):hover {
      background-color: var(--ix-color-container-bg-hover);
      .@{transfer-list-prefix}-item-close-icon {
        background: linear-gradient(to right, transparent, var(--ix-color-container-bg-hover) 50%);
      }
    }
  }
}
