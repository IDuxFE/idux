@import '../../style/variable/index.less';
@import '../../style/mixins/reset.less';
@import '../../style/mixins/clearfix.less';

.@{carousel-prefix} {
  .reset-component();

  position: relative;
  width: 100%;
  height: 100%;
  overflow: hidden;

  &-sliders {
    position: relative;
    display: block;
    margin: 0;
    padding: 0;
    overflow: hidden;

    &:focus {
      outline: none;
    }
  }

  &-slider-track {
    display: flex;
    width: 100%;
    height: 100%;
    touch-action: pan-y;
    transform: translate3d(0, 0, 0);
  }
  &-vertical &-slider-track {
    flex-direction: column;
  }

  &-slider {
    position: relative;
    width: 100%;
    height: 100%;
    flex-shrink: 0;
    outline: none;
    overflow: hidden;
    pointer-events: none;

    img {
      display: block;
    }

    input.@{radio-prefix}-input,
    input.@{checkbox-prefix}-input {
      visibility: hidden;
    }

    &-active {
      pointer-events: auto;

      input.@{radio-prefix}-input,
      input.@{checkbox-prefix}-input {
        visibility: visible;
      }
    }

    // fix Carousel content height not match parent node
    // when children is empty node
    > div > div {
      vertical-align: bottom;
    }
  }

  &-vertical &-slider {
    height: auto;
  }

  &-arrow {
    font-size: var(--ix-carousel-arrow-size);
    color: var(--ix-carousel-arrow-color);
    opacity: var(--ix-carousel-icon-opacity);
    cursor: pointer;
    position: absolute;
    top: 50%;
    transform: translateY(-50%);

    &:hover {
      opacity: var(--ix-carousel-icon-hover-opacity);
    }

    &-prev {
      left: var(--ix-margin-size-sm);
    }

    &-next {
      right: var(--ix-margin-size-sm);
    }
  }

  &-dots {
    display: flex;

    &-start {
      left: var(--ix-margin-size-sm);
    }

    &-end {
      right: var(--ix-margin-size-sm);
    }

    &-top {
      top: var(--ix-margin-size-sm);
    }

    &-bottom {
      bottom: var(--ix-margin-size-sm);
    }
  }

  &-dot {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: var(--ix-carousel-icon-opacity);
    cursor: pointer;
    font-size: 0; // 消除幽灵高度，避免影响间距计算

    &::after {
      position: absolute;
      top: ~'calc(-1 * min(max(200%, 16px), 32px) / 2 + 100% / 2)';
      left: 0;
      display: block;
      content: ' ';
      width: 100%;
      height: ~'min(max(200%, 16px), 32px)';
    }

    &:hover,
    &-active {
      opacity: var(--ix-carousel-icon-active-opacity);
    }

    > button {
      width: var(--ix-carousel-horizontal-dot-width);
      height: var(--ix-carousel-horizontal-dot-height);
      border-radius: var(--ix-carousel-dot-border-radius);
      background-color: var(--ix-carousel-dot-bg-color);
      outline: none;
      border-style: none;
    }
  }

  &-horizontal &-dots {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
  }

  &-vertical &-dots {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    flex-direction: column;
  }

  &-vertical &-dot {
    > button {
      width: var(--ix-carousel-vertical-dot-width);
      height: var(--ix-carousel-vertical-dot-height);
    }

    &::after {
      top: 0;
      left: ~'calc(-1 * min(max(200%, 16px), 32px) / 2 + 100% / 2)';
      width: ~'min(max(200%, 16px), 32px)';
      height: 100%;
    }
  }

  &-horizontal &-dot + &-dot {
    margin-left: var(--ix-margin-size-sm);
  }

  &-vertical &-dot + &-dot {
    margin-top: var(--ix-margin-size-sm);
  }
}
