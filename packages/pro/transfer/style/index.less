@import '../../style/variable/index.less';
@import '../../../components/style/variable/index.less';
@import '../../style/mixins/reset.less';
@import '../../../components/style/mixins/ellipsis.less';

.@{pro-transfer-prefix} {
  .reset-component();

  min-width: var(--ix-pro-transfer-list-min-width);
  min-height: var(--ix-pro-transfer-list-min-height);

  .@{transfer-prefix}-list {
    background-color: var(--ix-color-container-bg);
  }

  &-empty-wrapper {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  &-table-content,
  &-tree-content .@{tree-prefix}-node &-tree-content {
    &-close-icon {
      margin-left: auto;
      cursor: pointer;
      font-size: var(--ix-font-size-icon);
      color: var(--ix-color-icon);
      &:hover {
        color: var(--ix-color-icon-hover);
      }
      &:focus,
      &:active {
        color: var(--ix-color-icon-active);
      }
    }
  }

  &-table-content {
    &-removable-label {
      display: inline-flex;
      width: 100%;
      align-items: center;

      &-ellipsis &-text {
        .ellipsis();
      }
    }
    &-close-icon {
      padding: var(--ix-pro-transfer-table-close-icon-padding);
      flex-shrink: 0;
    }

    tbody tr:last-child td {
      border-bottom: none;
    }
  }

  &-tree-content {
    &&-removable {
      .@{tree-node-prefix}-content-suffix {
        position: sticky;
        right: 0;
        background: linear-gradient(to right, transparent, var(--ix-color-container-bg) 30%);
      }
      .@{tree-node-prefix}:hover {
        background-color: var(--ix-color-container-bg-hover);
        .@{tree-node-prefix}-content-suffix {
          background: linear-gradient(to right, transparent, var(--ix-color-container-bg-hover) 30%);
        }
      }
    }
    &.@{tree-prefix}-blocked .@{tree-node-prefix} {
      transition: none;
      background-color: var(--ix-color-container-bg);
      &:hover {
        background-color: var(--ix-color-container-bg-hover);
        &-content {
          background-color: var(--ix-color-container-bg-hover);
        }
      }
      &-content {
        background-color: var(--ix-color-container-bg);
        transition: none;
      }

      &-active:not(&-disabled),
      &-selected:not(&-disabled) {
        background-color: var(--ix-color-container-bg);
        &:hover {
          background-color: var(--ix-color-container-bg-hover);
        }
      }
    }
    & .@{tree-node-prefix} &-close-icon {
      padding: var(--ix-pro-transfer-tree-close-icon-padding);
    }
  }
}
